#pragma once

#include <string>

#include "../../../../../.gradle/caches/transforms-2/files-2.1/12b80ce887e4d15f4aa0a512179a5386/ColorSensorV3-cpp-1.0.1-headers/rev/ColorSensorV3.h"
#include "../../../../../.gradle/caches/transforms-2/files-2.1/12b80ce887e4d15f4aa0a512179a5386/ColorSensorV3-cpp-1.0.1-headers/rev/ColorMatch.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 *
 *
 * @author Michelle Crivella
 */
class ColorSensorInterface 
{
    public:
        ColorSensorInterface();
        ~ColorSensorInterface();
        std::string GetColorFromSensor(double confidence);
        bool ColorMatchesColorFromFMS();

    private:
        std::shared_ptr<rev::ColorSensorV3> colorSensor;
        
        static constexpr frc::Color kBlueTarget = frc::Color(0.143, 0.427, 0.429);
        static constexpr frc::Color kGreenTarget = frc::Color(0.197, 0.561, 0.240);
        static constexpr frc::Color kRedTarget = frc::Color(0.561, 0.232, 0.114);
        static constexpr frc::Color kYellowTarget = frc::Color(0.361, 0.524, 0.113);
        rev::ColorMatch m_colorMatcher;

        std::string colorFromFMS;
	    std::string getColorFromFMS();

};